syntax = "proto3";

enum RunStatus {
  PENDING = 0;
  RUNNING = 1;
  FAILED = 2;
  COMPLETED = 3;
  TERMINATED = 4;
}

enum WorkerDirectiveType {
  SERVICE_TO_WORKER = 0;
  WORKER_TO_SERVICE = 1;
  WORKER_TO_WORKER = 2;
}

message Obj_Project {
  string id = 1;
  int64 created_at = 2;
  int64 updated_at = 3;
  bool is_deleted = 4;
  string name = 6;
}

message Obj_ContainerImage {
  string id = 1;
  int64 created_at = 2;
  int64 updated_at = 3;
  bool is_deleted = 4;
  string name = 5;
  string project_id = 6;
  string protocol = 7;
  string task_ids = 8;
  string workflow_ids = 9;
}

message Obj_Task {
  string id = 1;
  int64 created_at = 2;
  int64 updated_at = 3;
  bool is_deleted = 4;
  bool is_mutable = 5;
  string name = 6;
  string project_ref_id = 7;
  string version = 8;
}

message Obj_Worker {
  enum Status {
    CLOSED = 0;
    HANGING = 1;
    IDLE = 2;
    INITIALIZING = 3;
    TERMINATING = 4;
    UNRESPONSIVE = 5;
    WORKING = 6;
  }

  string id = 1;
  int64 created_at = 2;
  int64 updated_at = 3;
  bool is_deleted = 4;
  string project_id = 5;
  string routines = 6;
  Status status = 7;
}

message Obj_Workflow {
  string id = 1;
  int64 created_at = 2;
  int64 updated_at = 3;
  bool is_deleted = 4;
  string name = 5;
  string project_ref_id = 6;
  string task_names = 7;
}

message Obj_RoutineRun {
  enum Status {
    DONE = 0;
    FAILED = 1;
    INITIALIZING = 2;
    RUNNING = 3;
    UNKNOWN = 4;
  }

  string id = 1;
  int64 created_at = 2;
  int64 updated_at = 3;
  bool is_deleted = 4;
  string local_run_id = 5;
  string parent_run_id = 6;
  string requesting_worker_id = 7;
  string routine_dbid = 8;
  Status status = 9;
}

message Obj_WorkerDirective {
  string id = 1;
  int64 created_at = 2;
  int64 updated_at = 3;
  bool is_deleted = 4;
  WorkerDirectiveType directive_type = 5;
  string from_worker_id = 6;
  string payload = 7;
  string payload_key = 8;
  string to_worker_id = 9;
}

message Req_GetProject {
  string name = 1;
}

message Req_GetWorkflow {
  string name = 1;
  string project_id = 2;
}

message Req_RegisterContainerImage {
  string name = 1;
  string project_id = 2;
  string protocol = 3;
  string task_ids = 4;
  string workflow_ids = 5;
}

message Req_RegisterProject {
  string image_name = 1;
  string name = 2;
}

message Req_RegisterWorkflow {
  string name = 1;
  string project_ref_id = 2;
}

message Req_RegisterTask {
  string name = 1;
  string project_ref_id = 2;
  string version = 3;
}

message Req_RegisterWorker {
  string project_id = 1;
  string routines = 2;
}

message Req_RouteWorkerDirective {
  string payload = 1;
  string payload_key = 2;
  string from_worker_id = 3;
}

message Req_RunRoutine {
  string arguments = 1;
  string local_run_id = 2;
  string routine_id = 3;
}

message Res_RegisterWorker {
  string project_id = 1;
}

service ML {
  rpc GetProject(Req_GetProject) returns (Obj_Project);
  rpc GetWorkflow(Req_GetWorkflow) returns (Obj_Workflow);
  rpc RegisterContainerImage(Req_RegisterContainerImage) returns (Obj_ContainerImage);
  rpc RegisterProject(Req_RegisterProject) returns (Obj_Project);
  rpc RegisterWorker(Req_RegisterWorker) returns (Obj_Worker);
  rpc RegisterWorkflows(stream Req_RegisterWorkflow) returns (stream Obj_Workflow);
  rpc RegisterTasks(stream Req_RegisterTask) returns (stream Obj_Task);
  rpc RouteWorkerDirectives(stream Req_RouteWorkerDirective) returns (stream Obj_WorkerDirective);
  rpc RunRoutine(Req_RunRoutine) returns (Obj_RoutineRun);
}