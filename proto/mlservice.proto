syntax = "proto3";

import "google/protobuf/timestamp.proto";

enum TaskInstanceStatus {
  QUEUED = 0;
  RUNNING = 1;
  FAILED = 2;
  FINISHED = 3;
  TERMINATED = 4;
}

message Obj_Project {
  string id = 1;
  google.protobuf.Timestamp createdAt = 2;
  google.protobuf.Timestamp updatedAt = 3;
  bool isDeleted = 4;
  string imageName = 5;
  string name = 6;
}

message Obj_Task {
  string id = 1;
  google.protobuf.Timestamp createdAt = 2;
  google.protobuf.Timestamp updatedAt = 3;
  bool isDeleted = 4;
  string name = 5;
  string projectRefID = 6;
  string version = 7;
}

message Obj_TaskInstance {
  string id = 1;
  google.protobuf.Timestamp createdAt = 2;
  google.protobuf.Timestamp updatedAt = 3;
  bool isDeleted = 4;
  string projectRefID = 5;
  TaskInstanceStatus status = 6;
  string taskRefID = 7;
}

message Obj_TaskInstanceMessage {
  string id = 1;
  google.protobuf.Timestamp createdAt = 2;
  google.protobuf.Timestamp updatedAt = 3;
  bool isDeleted = 4;
  string payload = 5;
  string taskInstanceRefID = 6;
}

message Req_GetProjects {
}

message Req_GetTasksForProject {
  string projectRefID = 1;
}

message Req_GetTaskInstancesForTask {
  string taskRefID = 1;
  TaskInstanceStatus status = 2;
}

message Req_GetTaskInstanceMessagesForTaskInstance {
  string taskInstanceRefID = 1;
}

message Req_StartMLTask {
}

message Req_CreateProject {
  string imageName = 1;
  string name = 2;
}

message Req_CreateTask {
  string name = 1;
  string projectRefID = 2;
  string version = 3;
}

message Req_CreateTaskInstanceMessage {
  string payload = 1;
  string taskInstanceRefID = 2;
}

service ML {
  rpc GetProjects(Req_GetProjects) returns (stream Obj_Project);
  rpc GetTasksForProject(Req_GetTasksForProject) returns (stream Obj_Task);
  rpc GetTaskInstancesForTask(Req_GetTaskInstancesForTask) returns (stream Obj_TaskInstance);
  rpc GetTaskInstancesMessagesForTaskInstance(Req_GetTaskInstanceMessagesForTaskInstance) returns (stream Obj_TaskInstanceMessage);

  rpc CreateProject(Req_CreateProject) returns (Obj_Project);
  rpc CreateTask(Req_CreateTask) returns (Obj_Task);
  rpc CreateTaskInstanceMessage(Req_CreateTaskInstanceMessage) returns (Obj_TaskInstanceMessage);

  rpc StartTask(Req_StartMLTask) returns (Obj_TaskInstance);
}